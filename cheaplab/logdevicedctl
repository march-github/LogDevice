#!/bin/bash
set -uo pipefail

declare -r PORT_LD_CLIENT=16001
declare -r PORT_LD_ADMIN=16004
declare -r ZK=zookeeper/logdevice   # name of Zookeeper cluster to use
declare -r PIDFILE=/run/logdeviced.pid

declare -r timeout=${2-60}
declare -r deadline=$(($(date +%s)+$timeout))

source ${LAB_PACKAGES_ROOT?}/cheaplib/current/cheaplib.sh || exit 1

case "${1-}" in
   start)
     for v in LAB_PACKAGES_ROOT LAB_DATADIR LAB_PORT_PROMETHEUS_SCRAPE LAB_ARGS;
     do
	 if [[ -z ${!v+_} ]]; then
	     >&2 echo "ABORT: $v is not set in the environment."\
		 "It was expected to be set by CheapLab."
	     exit 1
	 fi
     done
     if nc -z localhost $PORT_LD_ADMIN; then
       >&2 echo "ERROR: LogDevice admin port $PORT_LD_ADMIN is in use"
       exit 1
     fi

     CURRENT_PACKAGE=$LAB_PACKAGES_ROOT/logdeviced/current
     if [[ ! -h $CURRENT_PACKAGE ]]; then
       >&2 echo "ERROR: $CURRENT_PACKAGE does not exist or not a symlink"
       exit 1
     fi
     cd $CURRENT_PACKAGE 2>/dev/null
     if [[ $? -ne 0 ]]; then
       >&2 echo "ERROR: failed to cd to current package directory"\
                $(readlink -m $CURRENT_PACKAGE)
       exit 1
     fi
     if [[ ! -x bin/logdeviced ]]; then
       >&2 echo "ERROR: $CURRENT_PACKAGE/bin/logdeviced not found"\
                "or not executable"
       exit 1
     fi

     region=$(LAB-this_region) || exit

     zk=$(LAB-zookeeper_url $ZK $region) || exit
     if [[ -z $zk ]]; then
	 >&2 echo "No nodes found for Zookeeper cluster $ZK"
	 exit 1
     fi

     cluster=$(LAB-this_cluster_id $region)
     if [[ $? -ne 0 ]]; then
	 >&2 echo "ERROR: failed to get cluster id"
	 exit 1
     elif [[ $cluster =~ ^logdevice/([[:alnum:]_]+)$ ]]; then
	 cluster_name=${BASH_REMATCH[1]}
	 # fall through
     else
	 >&2 echo "ERROR: invalid cluster name '$cluster'."\
	     "Expected logdevice/[[:alnum:]_]+"
	 exit 1
     fi

     ulimit -Sc unlimited
     LD_LOAD_PLUGINS=lib/libldprometheus.so bin/logdeviced             \
          --config-path  ${zk}/conf/logdevice/${cluster_name}.conf     \
          --port $PORT_LD_CLIENT                                       \
          --admin-port $PORT_LD_ADMIN                                  \
          --prometheus-listen-addr 0.0.0.0:$LAB_PORT_PROMETHEUS_SCRAPE \
          --local-log-store-path=$LAB_DATADIR/                         \
	  $LAB_ARGS &
     logdeviced_pid=$!

     while [[ $(date +%s) -le $deadline ]]; do
       if lsof -p $logdeviced_pid -i6tcp:$PORT_LD_ADMIN -a -sTCP:LISTEN \
		 >/dev/null; then
	 # Our logdeviced has been able to bind the admin port
	 # Consider this a successful initialization.
	 echo $logdeviced_pid > $PIDFILE
         exit 0
       fi
       kill -0 $logdeviced_pid 2>/dev/null || exit 1
       sleep 2
     done
     exit 1
     ;;

   stop)
     if [[ -r $PIDFILE ]]; then
       logdeviced_pid=$(cat $PIDFILE)
       if kill -TERM $logdeviced_pid; then
         while [[ $(date +%s) -le $deadline ]] && \
		   nc -z localhost $PORT_LD_ADMIN; do
           sleep 2
	 done
       else
	 echo "process $logdeviced_pid in $PIDFILE does not exist"
       fi
     else
       echo "$PIDFILE not found or not readable"
     fi
     ;;

   "") echo "Usage: logdevicedctl start|stop [timeout_seconds]"
     ;;

   *) >&2 echo "ERROR: Invalid command: $1" ; exit 1
     ;;
esac
